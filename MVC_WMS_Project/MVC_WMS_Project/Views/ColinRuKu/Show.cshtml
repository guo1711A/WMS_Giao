
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Show</title>
    <link href="~/css/changku.css" rel="stylesheet" />
    <link href="~/css/bootstrap.css" rel="stylesheet" />
    <script src="~/js/axios.js"></script>
    <script src="~/js/Vue.js"></script>
</head>
<body>
    <div id="app">
        <div id="div1">
            <div id="div2"></div>
            <span id="h3_1"><b>入库管理</b></span>
        </div>
        <div id="div1">
            <div>
                <label id="c1">数据筛选</label>
                <a href="#" id="c2">高级搜索</a>
            </div>
            <hr />
            <div id="searchs">
                <label>入库单号:</label>
                <input v-model="dingDan" type="text" placeholder="请输入单号" />
                <label>入库类型:</label>
                <select v-modle="leiXing" v-on:change="ruType($event)">
                    <option value="">请选择</option>
                    <option v-for="(row,index) in info1" :key="index" :value="row.jlid">{{row.jlName}}</option>
                </select>
                <label>入库状态:</label>
                <select v-modle="zhuangTai" v-on:change="ruState($event)">
                    <option value="">请选择</option>
                    <option v-for="(row,index) in info2" :key="index" :value="row.sid">{{row.sName}}</option>
                </select>
                <button v-on:click="search">查询</button>

                <input id="congzhi" type="button" value="重置"/>
            </div>
            <hr />
            <div>
                <label>数据列表</label>
                <input id="add" type="button" value="新增" />
                <input id="upt" type="button" value="编译" />
                <input id="del" type="button" value="删除" />
                <input id="show" type="button" value="刷新" />
                <input id="daochu" type="button" value="导出" />
                <table class="table table-bordered ">
                    <thead>
                        <tr>
                            <td><input id="xuan" type="checkbox" /></td>
                            <td>订单号</td>
                            <td>产品名称</td>
                            <td>产品编号</td>
                            <td>批次</td>
                            <td>规格</td>
                            <td>数量</td>
                            <td>库位</td>
                            <td>入库类型</td>
                            <td>供应商</td>
                            <td>制单人</td>
                            <td>状态</td>
                            <td>审核人</td>
                            <td>审核时间</td>
                            <td>操作</td>
                        </tr>
                    </thead>
                    <tbody v-for="row in info">
                        <tr>
                            <td><input id="Check" type="checkbox" /></td>
                            <td>{{row.puName}}</td>
                            <td>{{row.prName}}</td>
                            <td>{{row.prNumber}}</td>
                            <td>{{row.puBatch}}</td>
                            <td>{{row.spName }}</td>
                            <td>{{row.puNumber}}</td>
                            <td>{{row.stName}}</td>
                            <td>{{row.jlName}}</td>
                            <td>{{row.puSupplierName}}</td>
                            <td>{{row.puPrepared}}</td>
                            <td>{{row.sName}}</td>
                            <td>{{row.puAudit}}</td>
                            <td>{{row.puAuditTime}}</td>
                            <td><a href="#">查看</a>&nbsp;&nbsp;<a href="#">编辑</a>&nbsp;&nbsp;<a v-on:click="Del(row.puid)">删除</a>&nbsp;&nbsp;<a href="#">打印</a></td>

                        </tr>
                    </tbody>
                </table>
                <input id="quan" type="checkbox" />全选
                <input id="fan" type="checkbox" />反选
            </div>



        </div>
    </div>

    <script>
        var vue = new Vue({
            el: '#app',
            data() {
                return {
                    info: null,
                    info1: [],
                    info2: [],
                    dingDan: "",
                    leiXing: "",
                    zhuangTai: "",
                }
            },
            mounted: function () {
                //显示主体
                this.show();
                //显示入库类型
                this.Type();
                //显示状态
                this.state(); 
            },
            methods: {
                //show: function () {
                //    axios
                //        .get('http://localhost:57059/api/ruku/RKShow')
                //        .then(Response => (this.info = Response.data))
                //},
                //显示主体
                show: function () {
                    axios({
                        method: "get",
                        url: "http://localhost:57059/api/ruku/RKShow",
                    }).then((res => (this.info = res.data)))
                },
                //show: function () {   //调用show这个方法
                //    let t = this;
                //    axios({
                //        url: "http://localhost:57059/api/ruku/RKShow", //仅为示例，并非真实的接口地址
                //        method: "get",
                //        data: {},
                //        header: {
                //            "content-type": "application/json" // 默认值
                //        },
                //        success(res) {
                //            console.log(res.data);
                //            t.info = res.data;        //把数据存入name中
                //        }
                //    });
                //},

                //显示入库类型
                Type: function () {
                    axios
                        .get('http://localhost:57059/api/ruku/RKTShow')
                        .then(Response => (this.info1 = Response.data))
                },
                //显示状态
                state: function () {
                    axios
                        .get('http://localhost:57059/api/default/ZTShow')
                        .then(Response => (this.info2 = Response.data))
                },
                //checkAll() {
                //    this.info.forEach(row => {
                //        row.checked = true;
                //    });

                //    // this.checkArr = this.checkArr.map(item => item = true);
                //},
                //checkAnti() {
                //    this.info.forEach(item => {
                //        item.checked = !item.checked;
                //    });
                //},
                //获取下拉框id
                ruType(event) { 
                    this.leiXing = event.target.value; 
                },
                 //获取下拉框id
                ruState(event) {
                    this.zhuangTai = event.target.value; 
                },
                //查询
                search: function () { 
                    axios({
                        method: "get",
                        url: "http://localhost:57059/api/ruku/RKSearch?name=" + this.dingDan + "&jlid=" + this.leiXing + "&sid=" + this.zhuangTai,
                    }).then((res => (this.info = res.data)))
                },
                //删除
                Del: function () {
                    axios
                        .get('http://localhost:57059/api/ruku/Delete?id=' + this.puid)
                        .then(Response => (this.info = Response.data))
                },

            },
        });
    </script>
</body>
</html>
